---

- name: launching an ec2 instance
  hosts: localhost
  connection: local 
  gather_facts: false

 # vars_files:
 #   - keypair.yml

  tasks:
  - name: search for the latest rhel 7 ami
    ec2_ami_find:
      region: us-west-2
      owner: "309956199498"  
      name: "RHEL-7.2*"
    register: find_results

  - debug: var=find_results verbosity=5
  
  - name: find a subnet id
    ec2_vpc_subnet_facts: 
   #   aws_access_key: "{{ec2_access_key}}"
    #  aws_secret_key: "{{ec2_secret_key}}"
      region: us-west-2
    register: subnet_ids

  - debug: var=subnet_ids verbosity=5

  - name: create a security group
    ec2_group: 
      name: example
      description: "security FTW"
      region: us-west-2
     # aws_access_key: "{{ec2_access_key}}"
      #aws_secret_key: "{{ec2_secret_key}}"
      vpc_id: "{{subnet_ids.subnets[0].vpc_id}}"
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 8080
          to_port: 8080
          cidr_ip: 0.0.0.0/0
    register: my_security_group
  
  - name: launch an ec2 instance
    ec2: 
     # aws_access_key: "{{ec2_access_key}}"
     # aws_secret_key: "{{ec2_secret_key}}"
      instance_type: m3.large
      region: us-west-2
      image: "{{find_results.results[0].ami_id}}"
      group_id: "{{my_security_group.group_id}}"
      key_name: gabemuniz
      volumes:
        - device_name: /dev/sda1
          volume_size: 30
          volume_type: gp2
      instance_tags: 
        Name: Test-Tower
      wait: yes
      vpc_subnet_id: "{{subnet_ids.subnets[0].id}}"
      assign_public_ip: yes
    register: ec2
  - debug: var=item.public_ip verbosity=5

  - name: add new instance into inventory
    add_host: hostname={{item.public_ip}} groupname=tower
    with_items: "{{ec2.instances}}" 

  - name: wait for ssh
    wait_for: host="{{item.public_dns_name}}" port=22 delay=60 timeout=320 state=started
    with_items: "{{ec2.instances}}"

